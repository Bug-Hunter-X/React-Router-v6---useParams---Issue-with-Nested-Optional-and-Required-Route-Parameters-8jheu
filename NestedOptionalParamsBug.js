In React Router Dom v6, a common issue arises when using the `useParams` hook within a component nested several levels deep.  If the parent routes have optional parameters (using `:` without requiring a value), and a child route uses a required parameter, the child route may not receive its parameter correctly if the optional parameter in a parent route is missing.  This happens because the optional parameter is rendered as `undefined` in the URL, which can interfere with how the child route processes its required parameters. 